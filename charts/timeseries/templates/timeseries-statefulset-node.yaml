{{- if eq .Values.global.timeseriesLocation "on-cluster" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: drycc-timeseries-node
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  replicas: {{ .Values.nodeReplicas }}
  serviceName: drycc-timeseries-node
  selector:
    matchLabels:
      app: drycc-timeseries-node
  template:
    metadata:
      labels:
        app: drycc-timeseries-node
    spec:
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset.type "key" .Values.podAffinityPreset.key "values" .Values.podAffinityPreset.values ) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset.type "key" .Values.podAntiAffinityPreset.key "values" .Values.podAntiAffinityPreset.values ) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values ) | nindent 10 }}
      serviceAccountName: drycc-timeseries
      initContainers:
      - name: drycc-timeseries-node-init
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/python-dev:latest
        imagePullPolicy: {{.Values.imagePullPolicy}}
        args:
        - netcat
        - -v
        - -a
        - $(DRYCC_TIMESERIES_SERVICE_HOST):$(DRYCC_TIMESERIES_SERVICE_PORT)
        {{- include "timeseries.envs" . | indent 8 }}
      containers:
      - name: drycc-timeseries-node
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/timeseries:{{.Values.imageTag}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        ports:
        - containerPort: 5432
          protocol: TCP
        args:
        - node
        {{- include "timeseries.limits" . | indent 8 }}
        {{- include "timeseries.envs" . | indent 8 }}
        livenessProbe:
          exec:
            command:
              - init-stack
              - pg_isready
              - -q 
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - init-stack
              - pg_isready
              - -q
          initialDelaySeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: timeseries-node-data
          mountPath: /data
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: timeseries-node-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
  {{- else }}
      volumes:
      - name: timeseries-node-data
        emptyDir: {}
  {{- end }}
{{- end }}
